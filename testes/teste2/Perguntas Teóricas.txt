-----------
TESTE 18/19
-----------
1-A ( )
2-D ( )
3-D (x) A -> voltar atrás no browser - stack
4-D ( )
5-C ( )
6-C ( )
7-E ( )
8-B ( )
9-Duplamente ligada
10-Random access

-----------
TESTE 17/18
-----------
1-B ( )
2-A ( )
3-A (x) E -> empty() não é O(n)
4-D ( )
5-E (x) A -> se a queue estiver vazia, referências (front) e (back) podem ser alteradas
6-C ( )
7-B ( )
8-Definição de iterador
9-Binary Search em listas -> pode ser feita mas é ineficiente
10-Duplamente ligada permite o acesso ao elemento anterior

-----------
TESTE 16/17
-----------

1-B (x) E -> Ordenação por seleção é indiferente o estado inicial do vetor			
2-A ( )
3-B ( )		
4-B ( )
5-C ( )
6-A ( )
7-C ( )
8-B (x) D -> Prazo de validade -> queue
9-D ( )
10- (x) B -> Vetor ordenado, estrutura que mais facilita pesquisa e inserção

-----------------
TESTE 15/16 - ci2
-----------------
1-D ( )
2-C ( )
3-B ( )
4-A ( )
5-A (x) B -> raíz de 1000/100 é aprox 3min
6-C ( )
7-A ( )
8-A (x) D -> DÚVIDA
9-D ( )
10-D(x) C -> Static pode ser alterado

-----------------
TESTE 15/16 - ci3
-----------------
1-B ( )
2-C (x) D -> Numa lista duplamente ligada remover o último elemento tem complexidade O(1)
3-C ( )
4-A ( )
5-C ( )
6-A ( )
7-C ( )
8-A ( )
9-D (x) E -> Em estruturas lineares, quase tudo tem complexidade linear
10-C( )

-----------
TESTE 14/15
-----------
1-B ( )
2-A (x) D -> DÚVIDA - orientação stack
3-A ( )
4-E (x) D -> Permite em extremos opostos, não sabendo qual é a HEAD
5-A ( )
6-D ( )
7-C ( )
8-B ( )
9-B ( )
10-B( )

-----------
TESTE 13/14
-----------
1-B ( )
2-B (x) A -> Circular, volta sempre ao início
3-A ( )
4-B ( )
5-A ( )
6-B (x) E -> Nenhuma das opções está correta
7-B ( )
8-D ( )
9-B ( )
10-C( )



















